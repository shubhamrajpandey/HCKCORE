"use client";

import { useState } from "react";

export default function LevelDropdown() {
  const options = ["Level 3", "Level 4", "Level 5", "Level 6"];

  const [isOpen, setIsOpen] = useState(false);
  const [selectedLevel, setselectedLevel] = useState(options[0]);

  return (
    <div className="relative inline-block w-83 h-fit rounded-md">
      <button
        onClick={() => setIsOpen(!isOpen)}
        className="group flex items-center justify-between gap-3 px-4 py-2 bg-white border border-gray-300 rounded shadow w-83 h-16 hover:text-white hover:bg-[#74BF44] hover:brightness-90 transition duration-200 hover:cursor-pointer"
      >
        <div className="flex items-center gap-3">
          <svg
            className="w-[30px] h-[30px]"
            viewBox="0 0 32 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M16 24C14.0364 22.8 10.4727 21.8824 8 21.8824C5.6 21.8824 3.12727 22.3059 1.09091 23.3647C0.945455 23.4353 0.872727 23.4353 0.727273 23.4353C0.363636 23.4353 0 23.0824 0 22.7294V2.11765C0.872727 1.48235 1.81818 1.05882 2.90909 0.705882C4.52364 0.211765 6.29818 0 8 0C10.8364 0 13.8909 0.564706 16 2.11765C18.1091 0.564706 21.1636 0 24 0C25.7018 0 27.4764 0.211765 29.0909 0.705882C30.1818 1.05882 31.1273 1.48235 32 2.11765V22.7294C32 23.0824 31.6364 23.4353 31.2727 23.4353C31.1273 23.4353 31.0545 23.4353 30.9091 23.3647C28.8727 22.3059 26.4 21.8824 24 21.8824C21.5273 21.8824 17.9636 22.8 16 24ZM14.5455 4.23529C12.5673 3.38824 9.94909 2.82353 8 2.82353C6.25455 2.82353 4.50909 3.03529 2.90909 3.52941V19.7647C4.50909 19.2706 6.25455 19.0588 8 19.0588C9.94909 19.0588 12.5673 19.6235 14.5455 20.4706V4.23529ZM17.4545 20.4706C19.4327 19.6235 22.0509 19.0588 24 19.0588C25.7455 19.0588 27.4909 19.2706 29.0909 19.7647V3.52941C27.4909 3.03529 25.7455 2.82353 24 2.82353C22.0509 2.82353 19.4327 3.38824 17.4545 4.23529V20.4706ZM18.9091 16.7294C20.3055 16.2353 21.9927 15.9953 24 15.9953C25.5127 15.9953 26.7345 16.1082 27.6364 16.3341V14.2165C24.7419 13.6878 21.7633 13.7794 18.9091 14.4847V16.7294ZM18.9091 12.9741C20.3055 12.48 21.9927 12.2259 24 12.2259C25.5127 12.2259 26.7345 12.3388 27.6364 12.5647V10.4471C26.3709 10.2212 25.1491 10.1224 24 10.1224C22.1382 10.1224 20.4364 10.3341 18.9091 10.7576V12.9741ZM18.9091 9.17647C20.3055 8.71059 21.9927 8.47059 24 8.47059C25.3236 8.47059 26.56 8.59765 27.6364 8.86588V6.67765C26.3709 6.46588 25.1491 6.35294 24 6.35294C22.08 6.35294 20.3636 6.56471 18.9091 7.00235V9.17647Z"
              className="fill-[#A4C93A] group-hover:fill-white transition-colors duration-200"
            />
          </svg>

          <span className="font-[400] text-lg">{selectedLevel}</span>
        </div>
        <span className="ml-auto group-hover:text-white">&#x25BC;</span>
      </button>

      {/* Dropdown Menu */}
      {isOpen && (
        <div className="absolute mt-2 bg-white border border-gray-300 rounded shadow-md z-10 w-full">
          {options.map((option, index) => (
            <div
              key={index}
              onClick={() => {
                setselectedLevel(option);
                setIsOpen(false);
              }}
              className="flex items-center gap-3 px-4 py-2 hover:bg-gray-100 cursor-pointer font-[400]"
            >
              <svg
                width="30"
                height="30"
                viewBox="0 0 32 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16 24C14.0364 22.8 10.4727 21.8824 8 21.8824C5.6 21.8824 3.12727 22.3059 1.09091 23.3647C0.945455 23.4353 0.872727 23.4353 0.727273 23.4353C0.363636 23.4353 0 23.0824 0 22.7294V2.11765C0.872727 1.48235 1.81818 1.05882 2.90909 0.705882C4.52364 0.211765 6.29818 0 8 0C10.8364 0 13.8909 0.564706 16 2.11765C18.1091 0.564706 21.1636 0 24 0C25.7018 0 27.4764 0.211765 29.0909 0.705882C30.1818 1.05882 31.1273 1.48235 32 2.11765V22.7294C32 23.0824 31.6364 23.4353 31.2727 23.4353C31.1273 23.4353 31.0545 23.4353 30.9091 23.3647C28.8727 22.3059 26.4 21.8824 24 21.8824C21.5273 21.8824 17.9636 22.8 16 24ZM14.5455 4.23529C12.5673 3.38824 9.94909 2.82353 8 2.82353C6.25455 2.82353 4.50909 3.03529 2.90909 3.52941V19.7647C4.50909 19.2706 6.25455 19.0588 8 19.0588C9.94909 19.0588 12.5673 19.6235 14.5455 20.4706V4.23529ZM17.4545 20.4706C19.4327 19.6235 22.0509 19.0588 24 19.0588C25.7455 19.0588 27.4909 19.2706 29.0909 19.7647V3.52941C27.4909 3.03529 25.7455 2.82353 24 2.82353C22.0509 2.82353 19.4327 3.38824 17.4545 4.23529V20.4706ZM18.9091 16.7294C20.3055 16.2353 21.9927 15.9953 24 15.9953C25.5127 15.9953 26.7345 16.1082 27.6364 16.3341V14.2165C24.7419 13.6878 21.7633 13.7794 18.9091 14.4847V16.7294ZM18.9091 12.9741C20.3055 12.48 21.9927 12.2259 24 12.2259C25.5127 12.2259 26.7345 12.3388 27.6364 12.5647V10.4471C26.3709 10.2212 25.1491 10.1224 24 10.1224C22.1382 10.1224 20.4364 10.3341 18.9091 10.7576V12.9741ZM18.9091 9.17647C20.3055 8.71059 21.9927 8.47059 24 8.47059C25.3236 8.47059 26.56 8.59765 27.6364 8.86588V6.67765C26.3709 6.46588 25.1491 6.35294 24 6.35294C22.08 6.35294 20.3636 6.56471 18.9091 7.00235V9.17647Z"
                  fill="#A4C93A"
                />
              </svg>

              <span>{option}</span>
            </div>
          ))}
        </div>
      )}
    </div>
  );
}
